{"version":3,"sources":["../src/modal/modal-trigger.tsx","../src/modal/modal-context.ts"],"sourcesContent":["'use client';\nimport React, {type ReactElement, type ReactNode} from 'react';\nimport {type OverlayTriggerProps, useOverlayTriggerState} from 'react-stately';\nimport {useOverlayTrigger} from 'react-aria';\nimport Modal, {type ModalProps} from '@/modal/modal.tsx';\nimport Button from '@/button/button.tsx';\nimport {type ButtonVariantProps} from '@/button/button-variants.tsx';\nimport {modalContext} from '@/modal/modal-context.ts';\n\nexport type ModalTriggerProps = {\n\treadonly className?: string;\n\treadonly children: ReactElement;\n\treadonly label: ReactNode;\n} & OverlayTriggerProps &\n\tOmit<ModalProps, 'state' | 'children'> &\n\tButtonVariantProps;\n\nexport default function ModalTrigger(props: ModalTriggerProps) {\n\tconst {children, label, className} = props;\n\tconst state = useOverlayTriggerState(props);\n\tconst {triggerProps, overlayProps} = useOverlayTrigger(\n\t\t{type: 'dialog'},\n\t\tstate,\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Button {...props} {...triggerProps} className={className}>\n\t\t\t\t{label}\n\t\t\t</Button>\n\t\t\t{state.isOpen && (\n\t\t\t\t<Modal state={state}>\n\t\t\t\t\t{React.cloneElement(\n\t\t\t\t\t\t<modalContext.Provider value={state.close}>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</modalContext.Provider>,\n\t\t\t\t\t\toverlayProps,\n\t\t\t\t\t)}\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","import {createContext, useContext} from 'react';\n\nexport const modalContext = createContext<(() => void) | null>(null);\n\nexport function useCloseModal(): () => void {\n\tconst closeModal = useContext(modalContext);\n\n\tif (!closeModal) {\n\t\tthrow new Error('useCloseModal not used within a modal');\n\t}\n\n\treturn closeModal;\n}\n"],"mappings":";;;;;;;;AACA,OAAO,WAAgD;AACvD,SAAkC,8BAA6B;AAC/D,SAAQ,yBAAwB;;;ACHhC,SAAQ,eAAe,kBAAiB;AAEjC,IAAM,eAAe,cAAmC,IAAI;;;ADwBjE,mBACC,KADD;AATa,SAAR,aAA8B,OAA0B;AAC9D,QAAM,EAAC,UAAU,OAAO,UAAS,IAAI;AACrC,QAAM,QAAQ,uBAAuB,KAAK;AAC1C,QAAM,EAAC,cAAc,aAAY,IAAI;AAAA,IACpC,EAAC,MAAM,SAAQ;AAAA,IACf;AAAA,EACD;AAEA,SACC,iCACC;AAAA,wBAAC,kBAAQ,GAAG,OAAQ,GAAG,cAAc,WACnC,iBACF;AAAA,IACC,MAAM,UACN,oBAAC,SAAM,OACL,gBAAM;AAAA,MACN,oBAAC,aAAa,UAAb,EAAsB,OAAO,MAAM,OAClC,UACF;AAAA,MACA;AAAA,IACD,GACD;AAAA,KAEF;AAEF;","names":[]}