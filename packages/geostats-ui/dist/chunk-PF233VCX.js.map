{"version":3,"sources":["../src/list-box.tsx"],"sourcesContent":["'use client';\nimport React, {useRef, type RefObject} from 'react';\nimport {\n\ttype AriaListBoxProps,\n\tmergeProps,\n\tuseFocusRing,\n\tuseListBox,\n\tuseListBoxSection,\n\tuseOption,\n} from 'react-aria';\nimport {type Node} from '@react-types/shared';\nimport {type ListProps, type ListState, useListState} from 'react-stately';\nimport {twMerge} from 'tailwind-merge';\nimport {cx} from './cva.ts';\n\nexport type ListBoxProps<T extends Record<string, unknown>> =\n\t| StatefulListBoxProps<T>\n\t| BaseListBoxProps<T>;\n\nexport default function ListBox<T extends Record<string, unknown>>(\n\tprops: ListBoxProps<T>,\n) {\n\treturn 'state' in props ? (\n\t\t<BaseListBox {...props} />\n\t) : (\n\t\t<StatefulListBox {...props} />\n\t);\n}\n\ntype StatefulListBoxProps<T extends Record<string, unknown>> = ListProps<T> &\n\tOmit<BaseListBoxProps<T>, 'state'>;\n\nfunction StatefulListBox<T extends Record<string, unknown>>(\n\tprops: StatefulListBoxProps<T>,\n) {\n\tconst state = useListState<T>(props);\n\n\treturn <BaseListBox {...props} state={state} />;\n}\n\nexport type BaseListBoxProps<T extends Record<string, unknown>> = {\n\treadonly className?: string;\n\treadonly listBoxRef?: RefObject<HTMLUListElement>;\n\treadonly state: ListState<T>;\n} & AriaListBoxProps<T>;\n\nexport function BaseListBox<T extends Record<string, unknown>>(\n\tprops: BaseListBoxProps<T>,\n) {\n\tconst {label, state, className} = props;\n\n\tconst listBoxRef = useRef<HTMLUListElement>(null);\n\tconst {listBoxProps, labelProps} = useListBox<T>(props, state, listBoxRef);\n\n\treturn (\n\t\t<>\n\t\t\t{label ? (\n\t\t\t\t<label\n\t\t\t\t\t{...labelProps}\n\t\t\t\t\tclassName='mb-2 block px-2 text-xl text-stone-200'\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</label>\n\t\t\t) : null}\n\n\t\t\t<ul\n\t\t\t\t{...listBoxProps}\n\t\t\t\tref={listBoxRef}\n\t\t\t\tclassName={twMerge(\n\t\t\t\t\t'rounded overflow-y-auto scroll-smooth scrollbar-track-transparent scrollbar-thumb-stone-50 scrollbar-thin scrollbar-thumb-rounded',\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{[...state.collection].map(item =>\n\t\t\t\t\titem.type === 'section' ? (\n\t\t\t\t\t\t<ListBoxSection\n\t\t\t\t\t\t\tkey={item.key}\n\t\t\t\t\t\t\tsection={item}\n\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Option key={item.key} item={item} state={state} />\n\t\t\t\t\t),\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</>\n\t);\n}\n\nexport type ListBoxSectionProps<T> = {\n\treadonly section: Node<T>;\n\treadonly state: ListState<T>;\n};\n\nfunction ListBoxSection<T extends Record<string, unknown>>(\n\tprops: ListBoxSectionProps<T>,\n) {\n\tconst {section, state} = props;\n\n\tconst {itemProps, headingProps, groupProps} = useListBoxSection({\n\t\theading: section.rendered,\n\t\t'aria-label': section['aria-label'],\n\t});\n\t// If the section is not the first, add a separator element to provide visual separation.\n\t// The heading is rendered inside an <li> element, which contains\n\t// a <ul> with the child items.\n\treturn (\n\t\t<li {...itemProps} className='p-2'>\n\t\t\t{section.rendered && (\n\t\t\t\t<div\n\t\t\t\t\t{...headingProps}\n\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t'font-semibold py-2 text-sm text-stone-200 top-0',\n\t\t\t\t\t\tsection.key !== state.collection.getFirstKey() &&\n\t\t\t\t\t\t\t'mt-2',\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{section.rendered}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<ul {...groupProps}>\n\t\t\t\t{[...state.collection.getChildren!(section.key)].map(node => (\n\t\t\t\t\t<Option key={node.key} item={node} state={state} />\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</li>\n\t);\n}\n\nexport type OptionProps<T extends Record<string, unknown>> = {\n\treadonly item: Node<T>;\n\treadonly state: ListState<T>;\n};\n\nfunction Option<T extends Record<string, unknown>>(props: OptionProps<T>) {\n\tconst {item, state} = props;\n\n\t// Get props for the option element\n\tconst ref = React.useRef(null);\n\tconst {isSelected, optionProps, isFocused, allowsSelection} = useOption(\n\t\t{key: item.key},\n\t\tstate,\n\t\tref,\n\t);\n\n\t// Determine whether we should show a keyboard\n\t// focus ring for accessibility\n\tconst {isFocusVisible, focusProps} = useFocusRing();\n\n\treturn (\n\t\t<li\n\t\t\t{...mergeProps(optionProps, focusProps)}\n\t\t\tref={ref}\n\t\t\tclassName={cx(\n\t\t\t\t'text-stone-300 p-2 border rounded border-transparent outline-none cursor-pointer data-[focus-visible=true]:border-stone-50',\n\t\t\t\tisSelected && 'bg-stone-50 text-stone-800',\n\t\t\t\tallowsSelection && !isSelected && 'hover:bg-stone-800',\n\t\t\t\tallowsSelection && isFocused && !isSelected && 'bg-stone-900',\n\t\t\t)}\n\t\t\tdata-focus-visible={isFocusVisible}\n\t\t>\n\t\t\t{item.rendered}\n\t\t</li>\n\t);\n}\n"],"mappings":";;;;;AACA,OAAO,SAAQ,cAA6B;AAC5C;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAwC,oBAAmB;AAC3D,SAAQ,eAAc;AAWpB,SAgCA,UAhCA,KAgCA,YAhCA;AAJa,SAAR,QACN,OACC;AACD,SAAO,WAAW,QACjB,oBAAC,eAAa,GAAG,OAAO,IAExB,oBAAC,mBAAiB,GAAG,OAAO;AAE9B;AAKA,SAAS,gBACR,OACC;AACD,QAAM,QAAQ,aAAgB,KAAK;AAEnC,SAAO,oBAAC,eAAa,GAAG,OAAO,OAAc;AAC9C;AAQO,SAAS,YACf,OACC;AACD,QAAM,EAAC,OAAO,OAAO,UAAS,IAAI;AAElC,QAAM,aAAa,OAAyB,IAAI;AAChD,QAAM,EAAC,cAAc,WAAU,IAAI,WAAc,OAAO,OAAO,UAAU;AAEzE,SACC,iCACE;AAAA,YACA;AAAA,MAAC;AAAA;AAAA,QACC,GAAG;AAAA,QACJ,WAAU;AAAA,QAET;AAAA;AAAA,IACF,IACG;AAAA,IAEJ;AAAA,MAAC;AAAA;AAAA,QACC,GAAG;AAAA,QACJ,KAAK;AAAA,QACL,WAAW;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QAEC,WAAC,GAAG,MAAM,UAAU,EAAE;AAAA,UAAI,UAC1B,KAAK,SAAS,YACb;AAAA,YAAC;AAAA;AAAA,cAEA,SAAS;AAAA,cACT;AAAA;AAAA,YAFK,KAAK;AAAA,UAGX,IAEA,oBAAC,UAAsB,MAAY,SAAtB,KAAK,GAA+B;AAAA,QAEnD;AAAA;AAAA,IACD;AAAA,KACD;AAEF;AAOA,SAAS,eACR,OACC;AACD,QAAM,EAAC,SAAS,MAAK,IAAI;AAEzB,QAAM,EAAC,WAAW,cAAc,WAAU,IAAI,kBAAkB;AAAA,IAC/D,SAAS,QAAQ;AAAA,IACjB,cAAc,QAAQ,YAAY;AAAA,EACnC,CAAC;AAID,SACC,qBAAC,QAAI,GAAG,WAAW,WAAU,OAC3B;AAAA,YAAQ,YACR;AAAA,MAAC;AAAA;AAAA,QACC,GAAG;AAAA,QACJ,WAAW;AAAA,UACV;AAAA,UACA,QAAQ,QAAQ,MAAM,WAAW,YAAY,KAC5C;AAAA,QACF;AAAA,QAEC,kBAAQ;AAAA;AAAA,IACV;AAAA,IAED,oBAAC,QAAI,GAAG,YACN,WAAC,GAAG,MAAM,WAAW,YAAa,QAAQ,GAAG,CAAC,EAAE,IAAI,UACpD,oBAAC,UAAsB,MAAM,MAAM,SAAtB,KAAK,GAA+B,CACjD,GACF;AAAA,KACD;AAEF;AAOA,SAAS,OAA0C,OAAuB;AACzE,QAAM,EAAC,MAAM,MAAK,IAAI;AAGtB,QAAM,MAAM,MAAM,OAAO,IAAI;AAC7B,QAAM,EAAC,YAAY,aAAa,WAAW,gBAAe,IAAI;AAAA,IAC7D,EAAC,KAAK,KAAK,IAAG;AAAA,IACd;AAAA,IACA;AAAA,EACD;AAIA,QAAM,EAAC,gBAAgB,WAAU,IAAI,aAAa;AAElD,SACC;AAAA,IAAC;AAAA;AAAA,MACC,GAAG,WAAW,aAAa,UAAU;AAAA,MACtC;AAAA,MACA,WAAW;AAAA,QACV;AAAA,QACA,cAAc;AAAA,QACd,mBAAmB,CAAC,cAAc;AAAA,QAClC,mBAAmB,aAAa,CAAC,cAAc;AAAA,MAChD;AAAA,MACA,sBAAoB;AAAA,MAEnB,eAAK;AAAA;AAAA,EACP;AAEF;","names":[]}