{"version":3,"sources":["../src/hooks/use-fuse.ts"],"sourcesContent":["import {useEffect, useRef} from 'react';\nimport {type List} from 'immutable';\nimport type Fuse from 'fuse.js';\nimport {type IFuseOptions} from 'fuse.js';\n\n/**\n * Creates and initializes a Fuse instance lazily using the provided collection and options.\n *\n * @template T - The type of elements in the collection.\n *\n * @param {Array<T>} items - The collection to be searched.\n * @param {IFuseOptions<T>} [options] - The options to customize the search behavior.\n *\n * @returns {Fuse<T> | undefined} - The initialized Fuse instance, or undefined if the Fuse instance is not yet available.\n */\nexport default function useFuse<T>(\n\titems: List<T>,\n\toptions?: IFuseOptions<T>,\n): Fuse<T> | undefined {\n\tconst fuseRef = useRef<Fuse<T>>();\n\n\tuseEffect(() => {\n\t\tvoid (async () => {\n\t\t\tconst fuse = await import('fuse.js');\n\t\t\tfuseRef.current = new fuse.default<T>(items.toArray(), options);\n\t\t})();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [items]);\n\treturn fuseRef.current;\n}\n"],"mappings":";AAAA,SAAQ,WAAW,cAAa;AAejB,SAAR,QACN,OACA,SACsB;AACtB,QAAM,UAAU,OAAgB;AAEhC,YAAU,MAAM;AACf,UAAM,YAAY;AACjB,YAAM,OAAO,MAAM,OAAO,oBAAS;AACnC,cAAQ,UAAU,IAAI,KAAK,QAAW,MAAM,QAAQ,GAAG,OAAO;AAAA,IAC/D,GAAG;AAAA,EAEJ,GAAG,CAAC,KAAK,CAAC;AACV,SAAO,QAAQ;AAChB;","names":[]}