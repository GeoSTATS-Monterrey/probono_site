{"version":3,"sources":["../src/hash-spy-toaster.tsx"],"sourcesContent":["'use client';\n\nimport {useEffect} from 'react';\nimport {type ToastContent, useToasts} from './toast.tsx';\n\n/**\n * Represents the properties for HashSpyToaster component.\n */\nexport type HashSpyToasterProps = {\n\treadonly toast: ToastContent;\n\treadonly hash: string;\n};\n\n/**\n * Displays a toast message if the current hash matches one of the specified hashes.\n *\n * @param {HashSpyToasterProps} props - The props object containing toast and hash values.\n *\n * @returns {null} - This method does not return any value.\n */\nexport default function HashSpyToaster(props: HashSpyToasterProps): null {\n\tconst {toast, hash} = props;\n\n\tconst toasts = useToasts();\n\n\tuseEffect(() => {\n\t\tconst hashes = window.location.hash.slice(1).split(',');\n\t\tif (hashes.includes(hash)) {\n\t\t\ttoasts.add(toast);\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [toast, hash]);\n\n\treturn null;\n}\n"],"mappings":";;;;;AAEA,SAAQ,iBAAgB;AAkBT,SAAR,eAAgC,OAAkC;AACxE,QAAM,EAAC,OAAO,KAAI,IAAI;AAEtB,QAAM,SAAS,UAAU;AAEzB,YAAU,MAAM;AACf,UAAM,SAAS,OAAO,SAAS,KAAK,MAAM,CAAC,EAAE,MAAM,GAAG;AACtD,QAAI,OAAO,SAAS,IAAI,GAAG;AAC1B,aAAO,IAAI,KAAK;AAAA,IACjB;AAAA,EAED,GAAG,CAAC,OAAO,IAAI,CAAC;AAEhB,SAAO;AACR;","names":[]}